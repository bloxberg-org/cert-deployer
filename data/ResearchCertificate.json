{
  "contractName": "ResearchCertificate",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenHash",
          "type": "string"
        }
      ],
      "name": "createCertificate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenHash\",\"type\":\"string\"}],\"name\":\"createCertificate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenHash(uint256)\":{\"details\":\"Returns the Hash for a given token ID. May return an empty string.     * Reverts if the token ID does not exist.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/james/bloxberg-certs/cert-deployer/contracts/ResearchCertificate.sol\":\"ResearchCertificate\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/james/bloxberg-certs/cert-deployer/contracts/Address.sol\":{\"keccak256\":\"0x8e5e5ba56ec398e1f5dd1b3c92b604f5d7509adedd67cb64ec99b6032603aaf1\",\"urls\":[\"bzz-raw://dedc4142af588d22fce563a0c94b11d2ef72e8960488175d1e285dfead8866eb\",\"dweb:/ipfs/Qmbaka9k33fbw1iirt4aYZtJvmFUjq23feuwreTEG7djqU\"]},\"/home/james/bloxberg-certs/cert-deployer/contracts/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"/home/james/bloxberg-certs/cert-deployer/contracts/Counters.sol\":{\"keccak256\":\"0xc734de7fec3190f8366c4fea869e0219c539f3289fdcd1398327658e6ba15c14\",\"urls\":[\"bzz-raw://a4fa8ead36e63fd868ec80a2e9af0aa3be06e99117474c6790a3c916ae2f6197\",\"dweb:/ipfs/Qmex5NCqwUtFogfKMvKcRobkW6zxi7m3hJmsXbtUR3WdZC\"]},\"/home/james/bloxberg-certs/cert-deployer/contracts/ERC165.sol\":{\"keccak256\":\"0xdcbcec72a08dc49e64965d2587b74d8b88cee6bdeecd6337016b7da774478c36\",\"urls\":[\"bzz-raw://b560b4b9736acd02b7cde1925ce1374a4bc87de0d04ba944b0a7f4056b75383f\",\"dweb:/ipfs/QmWewRjMTXUgAHTRMWZ3DHRdYdUkKWjFT7C6kNjLh4T2wL\"]},\"/home/james/bloxberg-certs/cert-deployer/contracts/ERC721.sol\":{\"keccak256\":\"0x9209db98ad0c4dd75dadc53e47da529ab3bb8bfa1e8d63ea0f919dda5f37abb4\",\"urls\":[\"bzz-raw://2b7f7cbc0340906c0a864d8448ed88b3f22db7930a668d454495b9d0e9e647bf\",\"dweb:/ipfs/QmRw9MFGQLvMCKR2yDbhN4oxdm89DsiE8EHMk3TPNdzjbb\"]},\"/home/james/bloxberg-certs/cert-deployer/contracts/ERC721Enumerable.sol\":{\"keccak256\":\"0xf069f853937dec05c8b550fa90b4224b2ec0ce25c43e0e7ab3f89dc81f0f45ba\",\"urls\":[\"bzz-raw://9b5ffdc949dd2a9d2b3f14911436983b90584c8efcaf5134f736a1401dd0e9b1\",\"dweb:/ipfs/QmcFVXsb3ULHJKauN4ByWNcNUkxQJrdAExUuGstL3jnDSo\"]},\"/home/james/bloxberg-certs/cert-deployer/contracts/ERC721Full.sol\":{\"keccak256\":\"0x53b5f24782d9b652d7a6c474f59775b728aeae6182c8226e3127a1b1ebc0094e\",\"urls\":[\"bzz-raw://f4131d6e2be088c1d6f534d72a650b12257a6bcbcff94c2c9438cbb872c1caff\",\"dweb:/ipfs/QmTcc8eNuneJ1ZhpwAfYREjN4DjGyuMyh5Wzh826BCzd9T\"]},\"/home/james/bloxberg-certs/cert-deployer/contracts/ERC721Metadata.sol\":{\"keccak256\":\"0xe16bd0815e9716382b838b1e927943cd47d6d9da4107c801a797a57b7658808a\",\"urls\":[\"bzz-raw://3233e4d264c6bf1242fb03e323af3946d1f61a852d691652a2135fb94c714969\",\"dweb:/ipfs/QmPTK2p9oDxjjEe3brrmwhjraPqz1QshMXpHdAj1iuxNET\"]},\"/home/james/bloxberg-certs/cert-deployer/contracts/IERC165.sol\":{\"keccak256\":\"0x9175561c374ec1fc33045e5dfdde2057e63e00debf432875f9e1e3395d99c149\",\"urls\":[\"bzz-raw://b0167043c1938b56904deaa481a73041aa4a9e054c60db0b0dfbebfe7869c06a\",\"dweb:/ipfs/QmUoYjhymBr6WUpExKgRvKxXD5fcdpQEe1o9ResKZu6CC5\"]},\"/home/james/bloxberg-certs/cert-deployer/contracts/IERC721.sol\":{\"keccak256\":\"0x5da1615f7991814677d252ad9faec8ae4b092c11b35f4e83d912e7b20f496cc1\",\"urls\":[\"bzz-raw://569c64d0190bdd0b917c3a90df7cca0a37284eb1796f93124dbf167efe0eda1a\",\"dweb:/ipfs/Qmczfreat78GKytQuqA2zTPZJw32zxPqLCrgVqis58QdFE\"]},\"/home/james/bloxberg-certs/cert-deployer/contracts/IERC721Enumerable.sol\":{\"keccak256\":\"0xf81dbd00ad4a1e4795df72759e33872c2599ea6c060be5898ed5d6fcd8ee9a11\",\"urls\":[\"bzz-raw://44dfcc25314c5ed29bc069c4746f87d98bb30a8dbc1a9bdeb797c2a530b9b9c5\",\"dweb:/ipfs/QmbRc5bKDobjE6zamLUy6Sh5HKd6XtNAsfBJzgZuQB3jpv\"]},\"/home/james/bloxberg-certs/cert-deployer/contracts/IERC721Metadata.sol\":{\"keccak256\":\"0x3781803087c4d2beff4eadc13ffb291d57a69abdf93396c9d0515fc33babb47d\",\"urls\":[\"bzz-raw://643dbf5c2612ecc744079d002f17291d350be53beda172c961f331a356ece9ba\",\"dweb:/ipfs/QmcUsJd3qSAK8oo5KvKNKQhxQFcdw7CPKjo7CBYk7DZ6LM\"]},\"/home/james/bloxberg-certs/cert-deployer/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x0c25ff00a747f1df6cb5e5c103adb98334df7e9561b0d46079454131c139bff9\",\"urls\":[\"bzz-raw://9417ce94829309329fa0f0dc50089696bc55f9f675c4b2ffcb31f960fe706250\",\"dweb:/ipfs/QmdckiAmnW2uhXK2V2enu7bEbqiMR6hzMD1ytGH43pKLhE\"]},\"/home/james/bloxberg-certs/cert-deployer/contracts/ResearchCertificate.sol\":{\"keccak256\":\"0xdf1a32581cc5fb4807ce5e99fed6763f2190053639e8151802d81c197300adb0\",\"urls\":[\"bzz-raw://a5cc358353894433b351c4ab9dd1f46bfa50d83e2acb742fb208e48fe769f0db\",\"dweb:/ipfs/QmUdPx6hdYSUBzspqWLVNJe2XduEBi5CoQ56kwrQmcDLma\"]},\"/home/james/bloxberg-certs/cert-deployer/contracts/SafeMath.sol\":{\"keccak256\":\"0x5f08a38ab68791c5a562abba20664ad358f06237bcd0cc20cd29803ebd40305b\",\"urls\":[\"bzz-raw://3eba1fc69db20574ae32cbbd6c2d1aa5a790b2b98b6749efc4b1612d2899ac26\",\"dweb:/ipfs/QmPgNqb6R7D1KD7HHk1UU15nUwuZwu2JRMCQjBXTqspcJb\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80636352211e116100ad578063a386439711610071578063a386439714610395578063b88d4fde146103b2578063c87b56dd14610478578063e985e9c514610495578063f0e36115146104c357610121565b80636352211e146103145780636c0360eb1461033157806370a082311461033957806395d89b411461035f578063a22cb4651461036757610121565b806318160ddd116100f457806318160ddd1461024557806323b872dd1461025f5780632f745c591461029557806342842e0e146102c15780634f6ccce7146102f757610121565b806301ffc9a71461012657806306fdde0314610161578063081812fc146101de578063095ea7b314610217575b600080fd5b61014d6004803603602081101561013c57600080fd5b50356001600160e01b031916610600565b604080519115158252519081900360200190f35b610169610623565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a357818101518382015260200161018b565b50505050905090810190601f1680156101d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101fb600480360360208110156101f457600080fd5b50356106ba565b604080516001600160a01b039092168252519081900360200190f35b6102436004803603604081101561022d57600080fd5b506001600160a01b03813516906020013561071c565b005b61024d6107f7565b60408051918252519081900360200190f35b6102436004803603606081101561027557600080fd5b506001600160a01b038135811691602081013590911690604001356107fd565b61024d600480360360408110156102ab57600080fd5b506001600160a01b038135169060200135610854565b610243600480360360608110156102d757600080fd5b506001600160a01b038135811691602081013590911690604001356108d3565b61024d6004803603602081101561030d57600080fd5b50356108ee565b6101fb6004803603602081101561032a57600080fd5b5035610954565b6101696109ae565b61024d6004803603602081101561034f57600080fd5b50356001600160a01b0316610a0f565b610169610a77565b6102436004803603604081101561037d57600080fd5b506001600160a01b0381351690602001351515610ad8565b610169600480360360208110156103ab57600080fd5b5035610bdd565b610243600480360360808110156103c857600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561040357600080fd5b82018360208201111561041557600080fd5b8035906020019184600183028401116401000000008311171561043757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d4e945050505050565b6101696004803603602081101561048e57600080fd5b5035610dac565b61014d600480360360408110156104ab57600080fd5b506001600160a01b0381358116916020013516610f78565b61024d600480360360608110156104d957600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561050457600080fd5b82018360208201111561051657600080fd5b8035906020019184600183028401116401000000008311171561053857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561058b57600080fd5b82018360208201111561059d57600080fd5b803590602001918460018302840111640100000000831117156105bf57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610fa6945050505050565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106af5780601f10610684576101008083540402835291602001916106af565b820191906000526020600020905b81548152906001019060200180831161069257829003601f168201915b505050505090505b90565b60006106c582610fe6565b6107005760405162461bcd60e51b815260040180806020018281038252602c815260200180611db3602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b600061072782610954565b9050806001600160a01b0316836001600160a01b0316141561077a5760405162461bcd60e51b8152600401808060200182810382526021815260200180611e636021913960400191505060405180910390fd5b806001600160a01b031661078c611003565b6001600160a01b031614806107ad57506107ad816107a8611003565b610f78565b6107e85760405162461bcd60e51b8152600401808060200182810382526038815260200180611d286038913960400191505060405180910390fd5b6107f28383611007565b505050565b60075490565b61080e610808611003565b82611075565b6108495760405162461bcd60e51b8152600401808060200182810382526031815260200180611e846031913960400191505060405180910390fd5b6107f2838383611111565b600061085f83610a0f565b821061089c5760405162461bcd60e51b815260040180806020018281038252602b815260200180611c1e602b913960400191505060405180910390fd5b6001600160a01b03831660009081526005602052604090208054839081106108c057fe5b9060005260206000200154905092915050565b6107f283838360405180602001604052806000815250610d4e565b60006108f86107f7565b82106109355760405162461bcd60e51b815260040180806020018281038252602c815260200180611eb5602c913960400191505060405180910390fd5b6007828154811061094257fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b0316806109a85760405162461bcd60e51b8152600401808060200182810382526029815260200180611d8a6029913960400191505060405180910390fd5b92915050565b600d8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106af5780601f10610684576101008083540402835291602001916106af565b60006001600160a01b038216610a565760405162461bcd60e51b815260040180806020018281038252602a815260200180611d60602a913960400191505060405180910390fd5b6001600160a01b03821660009081526003602052604090206109a890611262565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106af5780601f10610684576101008083540402835291602001916106af565b610ae0611003565b6001600160a01b0316826001600160a01b03161415610b46576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060046000610b53611003565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610b97611003565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b6060610be882610fe6565b610c235760405162461bcd60e51b8152600401808060200182810382526030815260200180611ca86030913960400191505060405180910390fd5b6000828152600c602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610cb85780601f10610c8d57610100808354040283529160200191610cb8565b820191906000526020600020905b815481529060010190602001808311610c9b57829003601f168201915b50505050509050805160001415610cdf57505060408051602081019091526000815261061e565b806040516020018082805190602001908083835b60208310610d125780518252601f199092019160209182019101610cf3565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405291505061061e565b610d5f610d59611003565b83611075565b610d9a5760405162461bcd60e51b8152600401808060200182810382526031815260200180611e846031913960400191505060405180910390fd5b610da684848484611266565b50505050565b6060610db782610fe6565b610df25760405162461bcd60e51b815260040180806020018281038252602f815260200180611e34602f913960400191505060405180910390fd5b6000828152600b602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610e875780601f10610e5c57610100808354040283529160200191610e87565b820191906000526020600020905b815481529060010190602001808311610e6a57829003601f168201915b50505050509050805160001415610eae57505060408051602081019091526000815261061e565b600d816040516020018083805460018160011615610100020316600290048015610f0f5780601f10610eed576101008083540402835291820191610f0f565b820191906000526020600020905b815481529060010190602001808311610efb575b5050825160208401908083835b60208310610f3b5780518252601f199092019160209182019101610f1c565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405291505061061e565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000610fb2600e6112b8565b6000610fbe600e611262565b9050610fca85826112c1565b610fd481856113fe565b610fde8184611461565b949350505050565b6000908152600160205260409020546001600160a01b0316151590565b3390565b600081815260026020526040902080546001600160a01b0319166001600160a01b038416908117909155819061103c82610954565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061108082610fe6565b6110bb5760405162461bcd60e51b815260040180806020018281038252602c815260200180611cfc602c913960400191505060405180910390fd5b60006110c683610954565b9050806001600160a01b0316846001600160a01b031614806111015750836001600160a01b03166110f6846106ba565b6001600160a01b0316145b80610fde5750610fde8185610f78565b826001600160a01b031661112482610954565b6001600160a01b0316146111695760405162461bcd60e51b8152600401808060200182810382526029815260200180611e0b6029913960400191505060405180910390fd5b6001600160a01b0382166111ae5760405162461bcd60e51b8152600401808060200182810382526024815260200180611cd86024913960400191505060405180910390fd5b6111b98383836114c4565b6111c4600082611007565b6001600160a01b03831660009081526003602052604090206111e5906114cf565b6001600160a01b0382166000908152600360205260409020611206906112b8565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b5490565b611271848484611111565b61127d848484846114e6565b610da65760405162461bcd60e51b8152600401808060200182810382526032815260200180611c496032913960400191505060405180910390fd5b80546001019055565b6001600160a01b03821661131c576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b61132581610fe6565b15611377576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b611383600083836114c4565b600081815260016020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352600390915290206113c2906112b8565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b61140782610fe6565b6114425760405162461bcd60e51b815260040180806020018281038252602c815260200180611ddf602c913960400191505060405180910390fd5b6000828152600b6020908152604090912082516107f292840190611b3e565b61146a82610fe6565b6114a55760405162461bcd60e51b815260040180806020018281038252602d815260200180611c7b602d913960400191505060405180910390fd5b6000828152600c6020908152604090912082516107f292840190611b3e565b6107f2838383611721565b80546114e290600163ffffffff61177816565b9055565b60006114fa846001600160a01b03166117c1565b61150657506001610fde565b600060606001600160a01b038616630a85bd0160e11b611524611003565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561159d578181015183820152602001611585565b50505050905090810190601f1680156115ca5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b602083106116325780518252601f199092019160209182019101611613565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611694576040519150601f19603f3d011682016040523d82523d6000602084013e611699565b606091505b5091509150816116ea578051156116b35780518082602001fd5b60405162461bcd60e51b8152600401808060200182810382526032815260200180611c496032913960400191505060405180910390fd5b600081806020019051602081101561170157600080fd5b50516001600160e01b031916630a85bd0160e11b149350610fde92505050565b61172c8383836117fa565b6001600160a01b0382166107f2576000818152600b602052604090205460026000196101006001841615020190911604156107f2576000818152600b602052604081206107f291611bbc565b60006117ba83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061186f565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610fde575050151592915050565b6118058383836107f2565b6001600160a01b03831661182b5761181d8282611906565b61182681611944565b6107f2565b6001600160a01b03821661185b576118438382611988565b60008181526006602052604081205561182681611a8a565b6118658382611988565b6107f28282611906565b600081848411156118fe5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118c35781810151838201526020016118ab565b50505050905090810190601f1680156118f05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6001600160a01b0382166000908152600560205260408120546119b290600163ffffffff61177816565b600083815260066020526040902054909150808214611a4d576001600160a01b03841660009081526005602052604081208054849081106119ef57fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b031681526020019081526020016000208381548110611a2d57fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b0384166000908152600560205260409020805480611a6e57fe5b6001900381819060005260206000200160009055905550505050565b600754600090611aa190600163ffffffff61177816565b60008381526008602052604081205460078054939450909284908110611ac357fe5b906000526020600020015490508060078381548110611ade57fe5b60009182526020808320909101929092558281526008909152604090208290556007805480611b0957fe5b600190038181906000526020600020016000905590556000600860008681526020019081526020016000208190555050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611b7f57805160ff1916838001178555611bac565b82800160010185558215611bac579182015b82811115611bac578251825591602001919060010190611b91565b50611bb8929150611c03565b5090565b50805460018160011615610100020316600290046000825580601f10611be25750611c00565b601f016020900490600052602060002090810190611c009190611c03565b50565b6106b791905b80821115611bb85760008155600101611c0956fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732314d657461646174613a204861736820736574206f66206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a204861736820717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a2646970667358221220c8f9fc901e058c10c1a24b5856f3f914b0842c10fceb1eccc84abf348a21cbe264736f6c63430006040033",
  "sourceMap": "78:561:19:-:0;;;209:62;5:9:-1;2:2;;;27:1;24;17:12;2:2;-1:-1;425:94:8;;;;;;;;;;;-1:-1:-1;;;425:94:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;425:94:8;;;;;;;718:40:4;-1:-1:-1;;;;;;;;718:18:4;:40;:::i;:::-;2206::5;-1:-1:-1;;;;;;;;2206:18:5;:40;:::i;:::-;1331:51:7;-1:-1:-1;;;;;;;;1331:18:7;:51;:::i;:::-;961:12:10;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;983:16:10;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1087:49:10;-1:-1:-1;;;;;;;;1087:18:10;:49;:::i;:::-;889:254;;425:94:8;;78:561:19;;1451:198:4;-1:-1:-1;;;;;;1534:25:4;;;;;1526:66;;;;;-1:-1:-1;;;1526:66:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1602:33:4;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1602:40:4;1638:4;1602:40;;;1451:198::o;78:561:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;78:561:19;;;-1:-1:-1;78:561:19;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "78:561:19:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;78:561:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;915:142:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;915:142:4;-1:-1:-1;;;;;;915:142:4;;:::i;:::-;;;;;;;;;;;;;;;;;;1248:92:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1248:92:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4211:209:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4211:209:5;;:::i;:::-;;;;-1:-1:-1;;;;;4211:209:5;;;;;;;;;;;;;;3545:381;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3545:381:5;;;;;;;;:::i;:::-;;2154:103:7;;;:::i;:::-;;;;;;;;;;;;;;;;5922:304:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5922:304:5;;;;;;;;;;;;;;;;;:::i;1763:238:7:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;1763:238:7;;;;;;;;:::i;6875:149:5:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6875:149:5;;;;;;;;;;;;;;;;;:::i;2595:205:7:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2595:205:7;;:::i;2892:232:5:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2892:232:5;;:::i;4482:89:10:-;;;:::i;2457:216:5:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2457:216:5;-1:-1:-1;;;;;2457:216:5;;:::i;1449:96:10:-;;;:::i;4719:290:5:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4719:290:5;;;;;;;;;;:::i;2565:547:10:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2565:547:10;;:::i;7747:286:5:-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;7747:286:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;7747:286:5;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;7747:286:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7747:286:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7747:286:5;;-1:-1:-1;7747:286:5;;-1:-1:-1;;;;;7747:286:5:i;1848:554:10:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1848:554:10;;:::i;5331:154:5:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5331:154:5;;;;;;;;;;:::i;277:360:19:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;277:360:19;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;277:360:19;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;277:360:19;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;277:360:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;277:360:19;;;;;;;;-1:-1:-1;277:360:19;;-1:-1:-1;;27:11;11:28;;8:2;;;52:1;49;42:12;8:2;277:360:19;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;277:360:19;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;277:360:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;277:360:19;;-1:-1:-1;277:360:19;;-1:-1:-1;;;;;277:360:19:i;915:142:4:-;-1:-1:-1;;;;;;1017:33:4;;994:4;1017:33;;;;;;;;;;;;;915:142;;;;:::o;1248:92:10:-;1328:5;1321:12;;;;;;;;-1:-1:-1;;1321:12:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1296:13;;1321:12;;1328:5;;1321:12;;1328:5;1321:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1248:92;;:::o;4211:209:5:-;4279:7;4306:16;4314:7;4306;:16::i;:::-;4298:73;;;;-1:-1:-1;;;4298:73:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4389:24:5;;;;:15;:24;;;;;;-1:-1:-1;;;;;4389:24:5;;4211:209::o;3545:381::-;3625:13;3641:16;3649:7;3641;:16::i;:::-;3625:32;;3681:5;-1:-1:-1;;;;;3675:11:5;:2;-1:-1:-1;;;;;3675:11:5;;;3667:57;;;;-1:-1:-1;;;3667:57:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3759:5;-1:-1:-1;;;;;3743:21:5;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3743:21:5;;:62;;;;3768:37;3785:5;3792:12;:10;:12::i;:::-;3768:16;:37::i;:::-;3735:152;;;;-1:-1:-1;;;3735:152:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3898:21;3907:2;3911:7;3898:8;:21::i;:::-;3545:381;;;:::o;2154:103:7:-;2233:10;:17;2154:103;:::o;5922:304:5:-;6081:41;6100:12;:10;:12::i;:::-;6114:7;6081:18;:41::i;:::-;6073:103;;;;-1:-1:-1;;;6073:103:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6187:32;6201:4;6207:2;6211:7;6187:13;:32::i;1763:238:7:-;1852:7;1887:16;1897:5;1887:9;:16::i;:::-;1879:5;:24;1871:80;;;;-1:-1:-1;;;1871:80:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1968:19:7;;;;;;:12;:19;;;;;:26;;1988:5;;1968:26;;;;;;;;;;;;;;1961:33;;1763:238;;;;:::o;6875:149:5:-;6978:39;6995:4;7001:2;7005:7;6978:39;;;;;;;;;;;;:16;:39::i;2595:205:7:-;2662:7;2697:13;:11;:13::i;:::-;2689:5;:21;2681:78;;;;-1:-1:-1;;;2681:78:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2776:10;2787:5;2776:17;;;;;;;;;;;;;;;;2769:24;;2595:205;;;:::o;2892:232:5:-;2956:7;2991:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2991:20:5;3029:19;3021:73;;;;-1:-1:-1;;;3021:73:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3112:5;2892:232;-1:-1:-1;;2892:232:5:o;4482:89:10:-;4556:8;4549:15;;;;;;;;-1:-1:-1;;4549:15:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4524:13;;4549:15;;4556:8;;4549:15;;4556:8;4549:15;;;;;;;;;;;;;;;;;;;;;;;;2457:216:5;2521:7;-1:-1:-1;;;;;2548:19:5;;2540:74;;;;-1:-1:-1;;;2540:74:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2632:24:5;;;;;;:17;:24;;;;;:34;;:32;:34::i;1449:96:10:-;1531:7;1524:14;;;;;;;;-1:-1:-1;;1524:14:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1499:13;;1524:14;;1531:7;;1524:14;;1531:7;1524:14;;;;;;;;;;;;;;;;;;;;;;;;4719:290:5;4833:12;:10;:12::i;:::-;-1:-1:-1;;;;;4821:24:5;:8;-1:-1:-1;;;;;4821:24:5;;;4813:62;;;;;-1:-1:-1;;;4813:62:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;4931:8;4886:18;:32;4905:12;:10;:12::i;:::-;-1:-1:-1;;;;;4886:32:5;;;;;;;;;;;;;;;;;-1:-1:-1;4886:32:5;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;4886:53:5;;;;;;;;;;;4969:12;:10;:12::i;:::-;4954:48;;;;;;;;;;-1:-1:-1;;;;;4954:48:5;;;;;;;;;;;;;;4719:290;;:::o;2565:547:10:-;2633:13;2666:16;2674:7;2666;:16::i;:::-;2658:77;;;;-1:-1:-1;;;2658:77:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2773:17;;;;:8;:17;;;;;;;;;2746:44;;;;;;-1:-1:-1;;2746:44:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:24;;:44;;;2773:17;2746:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2904:10;2898:24;2926:1;2898:29;2894:212;;;-1:-1:-1;;2943:9:10;;;;;;;;;-1:-1:-1;2943:9:10;;;;2894:212;3083:10;3066:28;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3066:28:10;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3066:28:10;;;3052:43;;;;;7747:286:5;7878:41;7897:12;:10;:12::i;:::-;7911:7;7878:18;:41::i;:::-;7870:103;;;;-1:-1:-1;;;7870:103:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:43;8001:4;8007:2;8011:7;8020:5;7983:17;:43::i;:::-;7747:286;;;;:::o;1848:554:10:-;1915:13;1948:16;1956:7;1948;:16::i;:::-;1940:76;;;;-1:-1:-1;;;1940:76:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2053:19;;;;:10;:19;;;;;;;;;2027:45;;;;;;-1:-1:-1;;2027:45:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;2053:19;2027:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2186:9;2180:23;2207:1;2180:28;2176:220;;;-1:-1:-1;;2224:9:10;;;;;;;;;-1:-1:-1;2224:9:10;;;;2176:220;2364:8;2374:9;2347:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2347:37:10;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2347:37:10;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2347:37:10;;;2333:52;;;;;5331:154:5;-1:-1:-1;;;;;5443:25:5;;;5420:4;5443:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5331:154::o;277:360:19:-;388:7;407:21;:9;:19;:21::i;:::-;439:17;459:19;:9;:17;:19::i;:::-;439:39;;488:27;494:9;505;488:5;:27::i;:::-;525:33;538:9;549:8;525:12;:33::i;:::-;568:35;582:9;593;568:13;:35::i;:::-;621:9;277:360;-1:-1:-1;;;;277:360:19:o;9210:152:5:-;9267:4;9299:20;;;:11;:20;;;;;;-1:-1:-1;;;;;9299:20:5;9336:19;;;9210:152::o;735:104:2:-;822:10;735:104;:::o;15244:155:5:-;15309:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15309:29:5;-1:-1:-1;;;;;15309:29:5;;;;;;;;:24;;15362:16;15309:24;15362:7;:16::i;:::-;-1:-1:-1;;;;;15353:39:5;;;;;;;;;;;15244:155;;:::o;9723:329::-;9808:4;9832:16;9840:7;9832;:16::i;:::-;9824:73;;;;-1:-1:-1;;;9824:73:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9907:13;9923:16;9931:7;9923;:16::i;:::-;9907:32;;9968:5;-1:-1:-1;;;;;9957:16:5;:7;-1:-1:-1;;;;;9957:16:5;;:51;;;;10001:7;-1:-1:-1;;;;;9977:31:5;:20;9989:7;9977:11;:20::i;:::-;-1:-1:-1;;;;;9977:31:5;;9957:51;:87;;;;10012:32;10029:5;10036:7;10012:16;:32::i;13097:538::-;13218:4;-1:-1:-1;;;;;13198:24:5;:16;13206:7;13198;:16::i;:::-;-1:-1:-1;;;;;13198:24:5;;13190:78;;;;-1:-1:-1;;;13190:78:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13286:16:5;;13278:65;;;;-1:-1:-1;;;13278:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13354:39;13375:4;13381:2;13385:7;13354:20;:39::i;:::-;13431:29;13448:1;13452:7;13431:8;:29::i;:::-;-1:-1:-1;;;;;13471:23:5;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;13516:21:5;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;13560:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;13560:25:5;-1:-1:-1;;;;;13560:25:5;;;;;;;;;13601:27;;13560:20;;13601:27;;;;;;;13097:538;;;:::o;1059:112:3:-;1150:14;;1059:112::o;8738:277:5:-;8855:32;8869:4;8875:2;8879:7;8855:13;:32::i;:::-;8905:48;8928:4;8934:2;8938:7;8947:5;8905:22;:48::i;:::-;8897:111;;;;-1:-1:-1;;;8897:111:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1177:178:3;1329:19;;1347:1;1329:19;;;1177:178::o;11782:391:5:-;-1:-1:-1;;;;;11861:16:5;;11853:61;;;;;-1:-1:-1;;;11853:61:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11933:16;11941:7;11933;:16::i;:::-;11932:17;11924:58;;;;;-1:-1:-1;;;11924:58:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;11993:45;12022:1;12026:2;12030:7;11993:20;:45::i;:::-;12049:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;12049:25:5;-1:-1:-1;;;;;12049:25:5;;;;;;;;12084:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;12133;;12158:7;;-1:-1:-1;;;;;12133:33:5;;;12150:1;;12133:33;;12150:1;;12133:33;11782:391;;:::o;3437:212:10:-;3536:16;3544:7;3536;:16::i;:::-;3528:73;;;;-1:-1:-1;;;3528:73:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3611:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;3805:214::-;3906:16;3914:7;3906;:16::i;:::-;3898:74;;;;-1:-1:-1;;;3898:74:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3982:17;;;;:8;:17;;;;;;;;:30;;;;;;;;:::i;525:223:8:-;696:45;723:4;729:2;733:7;696:26;:45::i;1361:108:3:-;1441:14;;:21;;1460:1;1441:21;:18;:21;:::i;:::-;1424:38;;1361:108::o;14188:1050:5:-;14308:4;14333:15;:2;-1:-1:-1;;;;;14333:13:5;;:15::i;:::-;14328:58;;-1:-1:-1;14371:4:5;14364:11;;14328:58;14455:12;14469:23;-1:-1:-1;;;;;14496:7:5;;-1:-1:-1;;;14599:12:5;:10;:12::i;:::-;14625:4;14643:7;14664:5;14504:175;;;;;;-1:-1:-1;;;;;14504:175:5;-1:-1:-1;;;;;14504:175:5;;;;;;-1:-1:-1;;;;;14504:175:5;-1:-1:-1;;;;;14504:175:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14504:175:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14504:175:5;;;-1:-1:-1;;26:21;;;22:32;6:49;;14504:175:5;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;14504:175:5;;;179:29:-1;;;;160:49;;14496:184:5;;;14504:175;;14496:184;;-1:-1:-1;14496:184:5;;-1:-1:-1;25:18;-1:-1;14496:184:5;-1:-1:-1;14496:184:5;;-1:-1:-1;14496:184:5;;-1:-1:-1;25:18;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;14496:184:5;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;14454:226:5;;;;14695:7;14690:542;;14722:17;;:21;14718:376;;14887:10;14881:17;14947:15;14934:10;14930:2;14926:19;14919:44;14836:145;15019:60;;-1:-1:-1;;;15019:60:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14690:542;15124:13;15151:10;15140:32;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;15140:32:5;-1:-1:-1;;;;;;15194:26:5;-1:-1:-1;;;15194:26:5;;-1:-1:-1;15186:35:5;;-1:-1:-1;;;15186:35:5;4578:382:10;4687:45;4714:4;4720:2;4724:7;4687:26;:45::i;:::-;-1:-1:-1;;;;;4747:16:10;;4743:211;;4851:19;;;;:10;:19;;;;;4845:33;;-1:-1:-1;;4845:33:10;;;;;;;;;;;:38;4841:103;;4910:19;;;;:10;:19;;;;;4903:26;;;:::i;1277:134:20:-;1335:7;1361:43;1365:1;1368;1361:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1354:50;1277:134;-1:-1:-1;;;1277:134:20:o;685:610:0:-;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;;1272:15:0;;;1237:51;-1:-1:-1;;685:610:0:o;2806:819:7:-;2915:45;2942:4;2948:2;2952:7;2915:26;:45::i;:::-;-1:-1:-1;;;;;2975:18:7;;2971:648;;3037:40;3065:2;3069:7;3037:27;:40::i;:::-;3091;3123:7;3091:31;:40::i;:::-;2971:648;;;-1:-1:-1;;;;;3152:16:7;;3148:471;;3212:47;3245:4;3251:7;3212:32;:47::i;:::-;3415:1;3386:26;;;:17;:26;;;;;:30;3431:45;3404:7;3431:36;:45::i;3148:471::-;3507:47;3540:4;3546:7;3507:32;:47::i;:::-;3568:40;3596:2;3600:7;3568:27;:40::i;1695:187:20:-;1781:7;1816:12;1808:6;;;;1800:29;;;;-1:-1:-1;;;1800:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1800:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1851:5:20;;;1695:187::o;4248:183:7:-;-1:-1:-1;;;;;4361:16:7;;;;;;;:12;:16;;;;;;;;:23;;4332:26;;;:17;:26;;;;;:52;;;4394:16;;;39:1:-1;23:18;;45:23;;4394:30:7;;;;;;;;4248:183::o;4626:161::-;4729:10;:17;;4702:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;4756:24:7;;;;;;;4626:161::o;5404:1115::-;-1:-1:-1;;;;;5691:18:7;;5666:22;5691:18;;;:12;:18;;;;;:25;:32;;5721:1;5691:32;:29;:32;:::i;:::-;5733:18;5754:26;;;:17;:26;;;;;;5666:57;;-1:-1:-1;5884:28:7;;;5880:323;;-1:-1:-1;;;;;5950:18:7;;5928:19;5950:18;;;:12;:18;;;;;:34;;5969:14;;5950:34;;;;;;;;;;;;;;5928:56;;6032:11;5999:12;:18;6012:4;-1:-1:-1;;;;;5999:18:7;-1:-1:-1;;;;;5999:18:7;;;;;;;;;;;;6018:10;5999:30;;;;;;;;;;;;;;;;;;;:44;;;;6115:30;;;:17;:30;;;;;:43;;;5880:323;-1:-1:-1;;;;;6279:18:7;;;;;;:12;:18;;;;;:24;;;;;;;;;;;;;;;;;;;;;;;;5404:1115;;;;:::o;6807:1051::-;7081:10;:17;7056:22;;7081:24;;7103:1;7081:24;:21;:24;:::i;:::-;7115:18;7136:24;;;:15;:24;;;;;;7504:10;:26;;7056:49;;-1:-1:-1;7136:24:7;;7056:49;;7504:26;;;;;;;;;;;;;;7482:48;;7566:11;7541:10;7552;7541:22;;;;;;;;;;;;;;;;;;;:36;;;;7645:28;;;:15;:28;;;;;;:41;;;7796:10;:16;;;;;;;;;;;;;;;;;;;;;;;;7850:1;7823:15;:24;7839:7;7823:24;;;;;;;;;;;:28;;;;6807:1051;;;;:::o;78:561:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;78:561:19;;;-1:-1:-1;78:561:19;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.6.0;\n\nimport \"./ERC721Full.sol\";\nimport \"./Counters.sol\";\n\ncontract ResearchCertificate is ERC721Full {\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIds;\n\n    constructor() ERC721Full(\"DigitalLabs\", \"SARI\") public {\n    }\n\n    function createCertificate(address recipient, string memory tokenURI, string memory tokenHash) public returns (uint256) {\n        _tokenIds.increment();\n\n        uint256 newItemId = _tokenIds.current();\n        _mint(recipient, newItemId);\n        _setTokenURI(newItemId, tokenURI);\n        _setTokenHash(newItemId, tokenHash);\n\n        return newItemId;\n    }\n}\n",
  "sourcePath": "/home/james/bloxberg-certs/cert-deployer/contracts/ResearchCertificate.sol",
  "ast": {
    "absolutePath": "/home/james/bloxberg-certs/cert-deployer/contracts/ResearchCertificate.sol",
    "exportedSymbols": {
      "ResearchCertificate": [
        2094
      ]
    },
    "id": 2095,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2036,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:19"
      },
      {
        "absolutePath": "/home/james/bloxberg-certs/cert-deployer/contracts/ERC721Full.sol",
        "file": "./ERC721Full.sol",
        "id": 2037,
        "nodeType": "ImportDirective",
        "scope": 2095,
        "sourceUnit": 1407,
        "src": "25:26:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/james/bloxberg-certs/cert-deployer/contracts/Counters.sol",
        "file": "./Counters.sol",
        "id": 2038,
        "nodeType": "ImportDirective",
        "scope": 2095,
        "sourceUnit": 211,
        "src": "52:24:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2039,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1406,
              "src": "110:10:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1406",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 2040,
            "nodeType": "InheritanceSpecifier",
            "src": "110:10:19"
          }
        ],
        "contractDependencies": [
          160,
          266,
          992,
          1363,
          1406,
          1698,
          1746,
          1854,
          1882,
          1926
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2094,
        "linearizedBaseContracts": [
          2094,
          1406,
          1698,
          1926,
          1363,
          1882,
          992,
          1854,
          266,
          1746,
          160
        ],
        "name": "ResearchCertificate",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2043,
            "libraryName": {
              "contractScope": null,
              "id": 2041,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 210,
              "src": "133:8:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$210",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "127:36:19",
            "typeName": {
              "contractScope": null,
              "id": 2042,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 170,
              "src": "146:16:19",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$170_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 2045,
            "name": "_tokenIds",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2094,
            "src": "168:34:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$170_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 2044,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 170,
              "src": "168:16:19",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$170_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2052,
              "nodeType": "Block",
              "src": "264:7:19",
              "statements": []
            },
            "documentation": null,
            "id": 2053,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4469676974616c4c616273",
                    "id": 2048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "234:13:19",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f2d1855861ac8ee9272316e0feff7b785dd32f2d51fe8c5712dcff76b41fb6a0",
                      "typeString": "literal_string \"DigitalLabs\""
                    },
                    "value": "DigitalLabs"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "53415249",
                    "id": 2049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "249:6:19",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_47d0e30dbbacd7563b2142f8394cc3a9f43471c9a1e2d3f3e26c3e6d67604df9",
                      "typeString": "literal_string \"SARI\""
                    },
                    "value": "SARI"
                  }
                ],
                "id": 2050,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2047,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1406,
                  "src": "223:10:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1406_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "223:33:19"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "220:2:19"
            },
            "returnParameters": {
              "id": 2051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "264:0:19"
            },
            "scope": 2094,
            "src": "209:62:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2092,
              "nodeType": "Block",
              "src": "397:240:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2064,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2045,
                        "src": "407:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$170_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2066,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 193,
                      "src": "407:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$170_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$170_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "407:21:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2068,
                  "nodeType": "ExpressionStatement",
                  "src": "407:21:19"
                },
                {
                  "assignments": [
                    2070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2070,
                      "name": "newItemId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2092,
                      "src": "439:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2069,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "439:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2074,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2071,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2045,
                        "src": "459:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$170_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2072,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 181,
                      "src": "459:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$170_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$170_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "459:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "439:39:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2076,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2055,
                        "src": "494:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2077,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2070,
                        "src": "505:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2075,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 760,
                      "src": "488:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "488:27:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2079,
                  "nodeType": "ExpressionStatement",
                  "src": "488:27:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2081,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2070,
                        "src": "538:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2082,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2057,
                        "src": "549:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2080,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1612,
                      "src": "525:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "525:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2084,
                  "nodeType": "ExpressionStatement",
                  "src": "525:33:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2086,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2070,
                        "src": "582:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2087,
                        "name": "tokenHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2059,
                        "src": "593:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2085,
                      "name": "_setTokenHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1634,
                      "src": "568:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "568:35:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2089,
                  "nodeType": "ExpressionStatement",
                  "src": "568:35:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2090,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2070,
                    "src": "621:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2063,
                  "id": 2091,
                  "nodeType": "Return",
                  "src": "614:16:19"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f0e36115",
            "id": 2093,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCertificate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2055,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2093,
                  "src": "304:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2057,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2093,
                  "src": "323:22:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2056,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "323:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2059,
                  "name": "tokenHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2093,
                  "src": "347:23:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2058,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "347:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "303:68:19"
            },
            "returnParameters": {
              "id": 2063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2062,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2093,
                  "src": "388:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "388:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "387:9:19"
            },
            "scope": 2094,
            "src": "277:360:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2095,
        "src": "78:561:19"
      }
    ],
    "src": "0:640:19"
  },
  "legacyAST": {
    "absolutePath": "/home/james/bloxberg-certs/cert-deployer/contracts/ResearchCertificate.sol",
    "exportedSymbols": {
      "ResearchCertificate": [
        2094
      ]
    },
    "id": 2095,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2036,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:19"
      },
      {
        "absolutePath": "/home/james/bloxberg-certs/cert-deployer/contracts/ERC721Full.sol",
        "file": "./ERC721Full.sol",
        "id": 2037,
        "nodeType": "ImportDirective",
        "scope": 2095,
        "sourceUnit": 1407,
        "src": "25:26:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/james/bloxberg-certs/cert-deployer/contracts/Counters.sol",
        "file": "./Counters.sol",
        "id": 2038,
        "nodeType": "ImportDirective",
        "scope": 2095,
        "sourceUnit": 211,
        "src": "52:24:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2039,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1406,
              "src": "110:10:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1406",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 2040,
            "nodeType": "InheritanceSpecifier",
            "src": "110:10:19"
          }
        ],
        "contractDependencies": [
          160,
          266,
          992,
          1363,
          1406,
          1698,
          1746,
          1854,
          1882,
          1926
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2094,
        "linearizedBaseContracts": [
          2094,
          1406,
          1698,
          1926,
          1363,
          1882,
          992,
          1854,
          266,
          1746,
          160
        ],
        "name": "ResearchCertificate",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2043,
            "libraryName": {
              "contractScope": null,
              "id": 2041,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 210,
              "src": "133:8:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$210",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "127:36:19",
            "typeName": {
              "contractScope": null,
              "id": 2042,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 170,
              "src": "146:16:19",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$170_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 2045,
            "name": "_tokenIds",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2094,
            "src": "168:34:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$170_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 2044,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 170,
              "src": "168:16:19",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$170_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2052,
              "nodeType": "Block",
              "src": "264:7:19",
              "statements": []
            },
            "documentation": null,
            "id": 2053,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4469676974616c4c616273",
                    "id": 2048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "234:13:19",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f2d1855861ac8ee9272316e0feff7b785dd32f2d51fe8c5712dcff76b41fb6a0",
                      "typeString": "literal_string \"DigitalLabs\""
                    },
                    "value": "DigitalLabs"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "53415249",
                    "id": 2049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "249:6:19",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_47d0e30dbbacd7563b2142f8394cc3a9f43471c9a1e2d3f3e26c3e6d67604df9",
                      "typeString": "literal_string \"SARI\""
                    },
                    "value": "SARI"
                  }
                ],
                "id": 2050,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2047,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1406,
                  "src": "223:10:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1406_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "223:33:19"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "220:2:19"
            },
            "returnParameters": {
              "id": 2051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "264:0:19"
            },
            "scope": 2094,
            "src": "209:62:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2092,
              "nodeType": "Block",
              "src": "397:240:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2064,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2045,
                        "src": "407:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$170_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2066,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 193,
                      "src": "407:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$170_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$170_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "407:21:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2068,
                  "nodeType": "ExpressionStatement",
                  "src": "407:21:19"
                },
                {
                  "assignments": [
                    2070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2070,
                      "name": "newItemId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2092,
                      "src": "439:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2069,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "439:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2074,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2071,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2045,
                        "src": "459:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$170_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2072,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 181,
                      "src": "459:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$170_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$170_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "459:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "439:39:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2076,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2055,
                        "src": "494:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2077,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2070,
                        "src": "505:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2075,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 760,
                      "src": "488:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "488:27:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2079,
                  "nodeType": "ExpressionStatement",
                  "src": "488:27:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2081,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2070,
                        "src": "538:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2082,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2057,
                        "src": "549:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2080,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1612,
                      "src": "525:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "525:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2084,
                  "nodeType": "ExpressionStatement",
                  "src": "525:33:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2086,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2070,
                        "src": "582:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2087,
                        "name": "tokenHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2059,
                        "src": "593:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2085,
                      "name": "_setTokenHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1634,
                      "src": "568:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "568:35:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2089,
                  "nodeType": "ExpressionStatement",
                  "src": "568:35:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2090,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2070,
                    "src": "621:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2063,
                  "id": 2091,
                  "nodeType": "Return",
                  "src": "614:16:19"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f0e36115",
            "id": 2093,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCertificate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2055,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2093,
                  "src": "304:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2057,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2093,
                  "src": "323:22:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2056,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "323:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2059,
                  "name": "tokenHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2093,
                  "src": "347:23:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2058,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "347:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "303:68:19"
            },
            "returnParameters": {
              "id": 2063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2062,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2093,
                  "src": "388:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "388:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "387:9:19"
            },
            "scope": 2094,
            "src": "277:360:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2095,
        "src": "78:561:19"
      }
    ],
    "src": "0:640:19"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-07-06T11:12:04.643Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty."
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenHash(uint256)": {
        "details": "Returns the Hash for a given token ID. May return an empty string.     * Reverts if the token ID does not exist."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}